@import '../theme';

$color-neo: mat-color($primary, 50);
$color-neo-raised: lighten($color-neo, 1%);
$color-neo-lowered: darken($color-neo, 2%);
$border-width-button: 4px;
$border-radius: 1.8em;
$transition-button-timing: 50ms;
$transition-selection-timing: $transition-button-timing*2;

@function theme($theme) {
  @return mat-color($theme, default);
}

@mixin neo-shadow($direction: out, $color-inset: null, $color-base: $color-neo) {
  @if ($direction == out) {
    @if ($color-inset) {
      box-shadow:
          -2px -2px 4px 1px lighten($color-base, 5%),
          2px 2px 4px 1px darken($color-base, 13%),
          1px 1px 2px darken($color-inset, 5%) inset,
          -1px -1px 1px lighten($color-inset, 3%) inset;
    }
    @else {
      box-shadow:
          -2px -2px 3px 2px lighten($color-base, 3%),
          2px 2px 4px 1px darken($color-base, 13%);
    }
  }
  @else if ($direction == in) {
    box-shadow:
      1px 1px 4px darken($color-base, 20%) inset,
      -1px -1px 3px 1px lighten($color-base, 17%) inset;
  }
  @else if ($direction == in-focused) {
    box-shadow:
      0.5px 0.5px 1px darken($color-base, 30%) inset,
      -1px -1px 2px lighten($color-base, 20%) inset;
  }
}

// Button
button.mat-raised-button:not([class*='mat-elevation-z']) {
  display: block;
  position: relative;
  cursor: pointer;
  background: $color-neo-raised;
  border-radius: $border-radius;
  border: $border-width-button solid $color-neo-raised;
  @include neo-shadow();

  &[disabled] {
    animation: none;
    cursor: default;
  }

  &:active {
    &:not([disabled]) {
      animation: neo-shadow-inset-button $transition-button-timing ease-out;
      animation-fill-mode: forwards;

      &::before {
        opacity: 1;
        transition-delay: $transition-button-timing ease-out;
      }
    }
  }

  &[color="primary"],
  &[color="accent"],
  &[color="warn"] {
    text-shadow: -0.5px -0.5px darken($color-neo, 20%);

    ::ng-deep > span {
      color: white;
    }
  }

  &[color="primary"] {
    background-color: theme($primary);
    @include neo-shadow(out, theme($primary));
  }

  &[color="accent"] {
    background-color: theme($accent);
    @include neo-shadow(out, theme($accent));
  }
  
  &[color="warn"] {
    background-color: theme($warn);
    @include neo-shadow(out, theme($warn));
  }

  &::before {
    opacity: 0;
    transition: opacity $transition-button-timing ease-in;
    content: '';
    position: absolute;
    z-index: -1;
    top: 0; right: 0; bottom: 0; left: 0;
    margin: -$border-width-button;
    border-radius: inherit;
    @include neo-shadow(in);
  }
}

// Text Input
::ng-deep .mat-form-field {
  & &-underline {
    opacity: 0;
  }

  &-appearance-legacy.mat-form-field-type-mat-input &-label {
    padding-top: 0.56em;
    margin-left: 10px;
    animation: label-move-blur $transition-selection-timing;
  }

  &-appearance-legacy.mat-form-field-type-mat-input &-infix,
  &-appearance-legacy.mat-form-field-type-mat-select &-wrapper {
    padding-bottom: 0; // Padding is added to the input for the neo shadow
  }

  &-type-mat-select {
    border-radius: $border-radius;
    border: $border-width-button solid $color-neo-raised;
    background: $color-neo-raised;
    @include neo-shadow();

    .mat-form-field-wrapper {
      padding: 0 0.5em;
    }

    .mat-form-field-infix {
      border: none;
    }
  }

  &-should-float {
    .mat-form-field-label-wrapper {
      top: -1em;
    }
  }

  &.mat-focused {
    input {
      background-color: lighten($color-neo-lowered, 1%);
      border-radius: $border-radius/3;
      @include neo-shadow(in-focused);
    }

    .mat-form-field-label {
      animation: label-move-focus $transition-selection-timing linear $transition-selection-timing;
      animation-fill-mode: forwards;
    }
  }
}
input {
  background-color: $color-neo-lowered;
  padding: 10px;
  border-radius: $border-radius;
  transition: all $transition-selection-timing ease-out;
  @include neo-shadow(in);
}

// Radio
::ng-deep .mat-radio {
  &-button &-container {
    border-radius: 100%;
    padding: 1em;
    background-color: $color-neo-raised;
    animation: neo-shadow-default $transition-selection-timing;
    animation-fill-mode: forwards;
    transition: background-color $transition-selection-timing;

    .mat-radio-outer-circle,
    .mat-radio-inner-circle {
      top: 50%;
      left: 50%;
      margin-top: -10px;
      margin-left: -10px;
    }

    .mat-radio-outer-circle {
      transform: matrix(0.75, 0, 0, 0.75, 0, 0);
    }
  }

  &-checked {
    .mat-radio-container {
      background-color: $color-neo-lowered;
      animation: neo-shadow-inset $transition-selection-timing;
      animation-fill-mode: forwards;
    }
  }
}

// Checkbox
::ng-deep .mat-checkbox {
  $checkbox-size-adjustment: 8px;
  
  & &-inner-container {
    padding: $checkbox-size-adjustment;
    background-color: $color-neo-raised;
    animation: neo-shadow-default $transition-selection-timing;
    animation-fill-mode: forwards;
    transition: background-color $transition-selection-timing;
  }

  & &-frame {
    margin: $checkbox-size-adjustment;
  }

  & &-background {
    padding: $checkbox-size-adjustment;
    margin: $checkbox-size-adjustment;
  }

  & &-layout {
    align-items: center;
  }

  &-checked {
    .mat-checkbox-inner-container {
      background-color: $color-neo-lowered;
      animation: neo-shadow-inset $transition-selection-timing;
      animation-fill-mode: forwards;
    }
  }
}

// Slide Toggle
::ng-deep .mat-slide-toggle {

  & &-thumb-container {
    top: 50%;
    margin-top: -10px;
    transform: matrix(0.75, 0, 0, 0.75, 0, 0);
  }

  & {
    &[color="primary"] {
      .mat-slide-toggle-thumb {
        background-color: theme($primary);
        @include neo-shadow(in, null, theme($primary));
      }
    }
    &[color="accent"] {
      .mat-slide-toggle-thumb {
        background-color: theme($accent);
        @include neo-shadow(in, null, theme($accent));
      }
    }
    &[color="warn"] {
      .mat-slide-toggle-thumb {
        background-color: theme($warn);
        @include neo-shadow(in, null, theme($warn));
      }
    }
  }

  & &-bar {
    height: 100%;
    border-radius: $border-radius;
    background-color: $color-neo-lowered;
    @include neo-shadow(in);
  }

  & {
    &.mat-checked {
      .mat-slide-toggle-bar {
        .mat-slide-toggle-thumb-container {
          transform:  matrix(0.75, 0, 0, 0.75, 0, 0) translate3d(20px, 0, 0);

          .mat-slide-toggle-thumb {
            background-color: $color-neo-raised;
          }
        }
      }
      &[color="primary"] {
        .mat-slide-toggle-bar {
          background-color: theme($primary);
          @include neo-shadow(in, null, theme($primary));
        }

        .mat-slide-toggle-thumb {
          @include neo-shadow(out, null, theme($primary));
        }
      }
      &[color="accent"] {
        .mat-slide-toggle-bar {
          background-color: theme($accent);
          @include neo-shadow(in, null, theme($accent));
        }

        .mat-slide-toggle-thumb {
          @include neo-shadow(out, null, theme($accent));
        }
      }
      &[color="warn"] {
        .mat-slide-toggle-bar {
          background-color: theme($warn);
          @include neo-shadow(in, null, theme($warn));
        }

        .mat-slide-toggle-thumb {
          @include neo-shadow(out, null, theme($warn));
        }
      }
    }
  }
}

// Animations
@keyframes label-move-blur {
  0% {
    margin-left: 0;
  }
  100% {
    margin-left: 10px;
  }
}
@keyframes label-move-focus {
   100% {
     margin-left: 0;
   }
}
@keyframes neo-shadow-default {
  0% {
    @include neo-shadow(in);
  }
  80% {
    box-shadow:
      0px 0px 2px darken($color-neo, 30%) inset,
      0px 0px 2px lighten($color-neo, 30%) inset;
  }
  81% {
    box-shadow:
      0px 0px 2px lighten($color-neo, 30%),
      0px 0px 2px darken($color-neo, 30%); 
  }
  100% {
    @include neo-shadow();
  }
}
@keyframes neo-shadow-inset {
  0% {
    @include neo-shadow();
  }
  30% {
    box-shadow:
      0px 0px 2px lighten($color-neo, 30%),
      0px 0px 2px darken($color-neo, 30%); 
  }
  31% {
    box-shadow:
      0px 0px 2px darken($color-neo, 30%) inset,
      0px 0px 2px lighten($color-neo, 30%) inset;
  }
  100% {
    @include neo-shadow(in);
  }
}
@keyframes neo-shadow-inset-button {
  0% {
    @include neo-shadow();
  }
  30% {
    box-shadow:
      0px 0px 2px lighten($color-neo, 30%),
      0px 0px 2px darken($color-neo, 30%); 
  }
  31%,
  100% {
    box-shadow: none;
  }
}


// DO NOT COPY OVER
::ng-deep .mat-tab-body { margin: 0; }
::ng-deep .mat-tab-body-content { padding: 0.75rem; }
button { margin: 0.5em; }
